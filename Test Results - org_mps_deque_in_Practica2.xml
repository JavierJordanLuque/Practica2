<?xml version="1.0" encoding="UTF-8"?><testrun duration="195" footerText="Generated by IntelliJ IDEA on 10/3/23 10:13" name="org.mps.deque in Practica2">
    <count name="total" value="38"/>
    <count name="passed" value="38"/>
    <config nameIsGenerated="true" configId="JUnit" name="org.mps.deque in Practica2">
        <module name="Practica2"/>
        <extension name="coverage">
            <pattern>
                <option name="PATTERN" value="org.mps.deque.*"/>
                <option name="ENABLED" value="true"/>
            </pattern>
        </extension>
        <option name="PACKAGE_NAME" value="org.mps.deque"/>
        <option name="TEST_OBJECT" value="package"/>
        <method v="2">
            <option name="Make" enabled="true"/>
        </method>
    </config>
    <root name="deque" comment="org.mps" location="java:suite://org.mps.deque">
        <output type="stdout">"C:\Program Files\Java\jdk-17\bin\java.exe" -ea -Didea.test.cyclic.buffer.size=1048576 "-javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2022.3.2\lib\idea_rt.jar=60043:C:\Program Files\JetBrains\IntelliJ IDEA 2022.3.2\bin" -Dfile.encoding=UTF-8 -classpath "C:\Users\Usuario\.m2\repository\org\junit\platform\junit-platform-launcher\1.9.2\junit-platform-launcher-1.9.2.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2022.3.2\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2022.3.2\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2022.3.2\plugins\junit\lib\junit-rt.jar;C:\Users\Usuario\Desktop\Universidad\3º Año\2º Cuatrimestre\Mantenimiento y Pruebas del Software\Practica2\target\test-classes;C:\Users\Usuario\Desktop\Universidad\3º Año\2º Cuatrimestre\Mantenimiento y Pruebas del Software\Practica2\target\classes;C:\Users\Usuario\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.9.2\junit-jupiter-engine-5.9.2.jar;C:\Users\Usuario\.m2\repository\org\junit\platform\junit-platform-engine\1.9.2\junit-platform-engine-1.9.2.jar;C:\Users\Usuario\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\Usuario\.m2\repository\org\junit\platform\junit-platform-commons\1.9.2\junit-platform-commons-1.9.2.jar;C:\Users\Usuario\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.9.2\junit-jupiter-api-5.9.2.jar;C:\Users\Usuario\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar" com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 @w@C:\Users\Usuario\AppData\Local\Temp\idea_working_dirs_junit.tmp @C:\Users\Usuario\AppData\Local\Temp\idea_junit.tmp -socket60042
Process finished with exit code 0
</output>
    </root>
    <suite duration="126" locationUrl="java:suite://org.mps.deque.DequeNodeTest" name="First, we create a DequeNode" status="passed">
        <suite duration="80" locationUrl="java:suite://org.mps.deque.DequeNodeTest$IsNotTerminalNode" name="When is not terminal node is called" status="passed">
            <test duration="73" locationUrl="java:test://org.mps.deque.DequeNodeTest$IsNotTerminalNode/isNotATerminalNodeOfEmptyNodeReturnsFalse" name="if it has no next nor previous elements should return false" metainfo="" status="passed"/>
            <test duration="2" locationUrl="java:test://org.mps.deque.DequeNodeTest$IsNotTerminalNode/isNotATerminalNodeWithNextElementReturnsFalse" name="if it has a next element but no previous element should return false" metainfo="" status="passed"/>
            <test duration="2" locationUrl="java:test://org.mps.deque.DequeNodeTest$IsNotTerminalNode/isNotATerminalNodeWithPreviousElementReturnsTrue" name="if it has a previous element but no next element should return false" metainfo="" status="passed"/>
            <test duration="3" locationUrl="java:test://org.mps.deque.DequeNodeTest$IsNotTerminalNode/isNotATerminalNodeWithPreviousAndNextElementReturnsFalse" name="if it has both previous and next element should return true" metainfo="" status="passed"/>
        </suite>
        <suite duration="9" locationUrl="java:suite://org.mps.deque.DequeNodeTest$IsLastNode" name="When is last node is called" status="passed">
            <test duration="2" locationUrl="java:test://org.mps.deque.DequeNodeTest$IsLastNode/isLastOfNodeWithPreviousAndNextElementReturnsFalse" name="if it has both previous and next element should return false" metainfo="" status="passed"/>
            <test duration="3" locationUrl="java:test://org.mps.deque.DequeNodeTest$IsLastNode/isLastOfNodeWithNextElementReturnsFalse" name="if it has a next element but no previous element should return false" metainfo="" status="passed"/>
            <test duration="2" locationUrl="java:test://org.mps.deque.DequeNodeTest$IsLastNode/isLastOfEmptyNodeReturnsTrue" name="if it has no next nor previous elements should return true" metainfo="" status="passed"/>
            <test duration="2" locationUrl="java:test://org.mps.deque.DequeNodeTest$IsLastNode/isLastOfNodeWithPreviousElementReturnsTrue" name="if it has a previous element but no next element should return true" metainfo="" status="passed"/>
        </suite>
        <suite duration="7" locationUrl="java:suite://org.mps.deque.DequeNodeTest$IsFirstNode" name="When is first node is called" status="passed">
            <test duration="2" locationUrl="java:test://org.mps.deque.DequeNodeTest$IsFirstNode/isFirstOfEmptyNodeReturnsTrue" name="if it has no next nor previous elements should return true" metainfo="" status="passed"/>
            <test duration="2" locationUrl="java:test://org.mps.deque.DequeNodeTest$IsFirstNode/isFirstOfNodeWithNextElementReturnsFalse" name="if it has a next element but no previous element should return true" metainfo="" status="passed"/>
            <test duration="1" locationUrl="java:test://org.mps.deque.DequeNodeTest$IsFirstNode/isFirstOfNodeWithPreviousElementReturnsTrue" name="if it has a previous element but no next element should return false" metainfo="" status="passed"/>
            <test duration="2" locationUrl="java:test://org.mps.deque.DequeNodeTest$IsFirstNode/isFirstOfNodeWithPreviousAndNextElementReturnsFalse" name="if it has both previous and next element should return false" metainfo="" status="passed"/>
        </suite>
        <suite duration="8" locationUrl="java:suite://org.mps.deque.DequeNodeTest$SetNextTest" name="When setting the next item" status="passed">
            <test duration="7" locationUrl="java:test://org.mps.deque.DequeNodeTest$SetNextTest/setNextShouldOverridePreviousNextNode" name="If the next node was set, then it should override it." metainfo="" status="passed"/>
            <test duration="1" locationUrl="java:test://org.mps.deque.DequeNodeTest$SetNextTest/setNextShouldSetNextNode" name="If the next node was not set, then the item must be set correctly." metainfo="" status="passed"/>
        </suite>
        <suite duration="6" locationUrl="java:suite://org.mps.deque.DequeNodeTest$GetNextTest" name="When getting the next item" status="passed">
            <test duration="3" locationUrl="java:test://org.mps.deque.DequeNodeTest$GetNextTest/getNextOfNullReturnsNull" name="If the next item is not set, then we should obtain null." metainfo="" status="passed"/>
            <test duration="3" locationUrl="java:test://org.mps.deque.DequeNodeTest$GetNextTest/getNextShouldReturnNextNode" name="If the next item is 1, then we should obtain a 1." metainfo="" status="passed"/>
        </suite>
        <suite duration="4" locationUrl="java:suite://org.mps.deque.DequeNodeTest$SetPreviousTest" name="When setting the previous item" status="passed">
            <test duration="2" locationUrl="java:test://org.mps.deque.DequeNodeTest$SetPreviousTest/setPreviousShouldSetPreviousNode" name="If the previous item was not set, then the item must be set correctly." metainfo="" status="passed"/>
            <test duration="2" locationUrl="java:test://org.mps.deque.DequeNodeTest$SetPreviousTest/setPreviousShouldOverrideLastPreviousNode" name="If the previous item was set, then it should override it." metainfo="" status="passed"/>
        </suite>
        <suite duration="4" locationUrl="java:suite://org.mps.deque.DequeNodeTest$GetPreviousTest" name="When getting the previous item" status="passed">
            <test duration="2" locationUrl="java:test://org.mps.deque.DequeNodeTest$GetPreviousTest/getPreviousOf1Returns1" name="If the previous node is set, then we should obtain it." metainfo="" status="passed"/>
            <test duration="2" locationUrl="java:test://org.mps.deque.DequeNodeTest$GetPreviousTest/getItemOfNullReturnsNull" name="If the previous item is not set, then we should obtain null." metainfo="" status="passed"/>
        </suite>
        <suite duration="4" locationUrl="java:suite://org.mps.deque.DequeNodeTest$SetItemTest" name="When setting an item" status="passed">
            <test duration="2" locationUrl="java:test://org.mps.deque.DequeNodeTest$SetItemTest/setItemWithItemOverridesIt" name="If there was an item inside the Node, it overrides it" metainfo="" status="passed"/>
            <test duration="2" locationUrl="java:test://org.mps.deque.DequeNodeTest$SetItemTest/setItemOf1Stores1" name="If there was no item previously stored, then the item should be stored" metainfo="" status="passed"/>
        </suite>
        <suite duration="4" locationUrl="java:suite://org.mps.deque.DequeNodeTest$GetItemTest" name="When getting an item" status="passed">
            <test duration="2" locationUrl="java:test://org.mps.deque.DequeNodeTest$GetItemTest/getItemOf1Returns1" name="If the item stored was 1, then we should obtain a 1." metainfo="" status="passed"/>
            <test duration="2" locationUrl="java:test://org.mps.deque.DequeNodeTest$GetItemTest/getItemOfNullReturnsNull" name="If the item stored was null, then we should obtain null." metainfo="" status="passed"/>
        </suite>
    </suite>
    <suite duration="69" locationUrl="java:suite://org.mps.deque.DoublyLinkedListDequeTest" name="DoublyLinkedListDeque tests" status="passed">
        <suite duration="25" locationUrl="java:suite://org.mps.deque.DoublyLinkedListDequeTest$SizeTest" name="when trying to obtain the size" status="passed">
            <test duration="14" locationUrl="java:test://org.mps.deque.DoublyLinkedListDequeTest$SizeTest/sizeOfANonEmptyDoublyLinkedListDeque" name="of a non-empty DoublyLinkedListDeque" metainfo="" status="passed"/>
            <test duration="11" locationUrl="java:test://org.mps.deque.DoublyLinkedListDequeTest$SizeTest/sizeOfAnEmptyDoublyLinkedListDeque" name="of an empty DoublyLinkedListDeque" metainfo="" status="passed"/>
        </suite>
        <suite duration="11" locationUrl="java:suite://org.mps.deque.DoublyLinkedListDequeTest$LastTest" name="when trying to obtain the last element" status="passed">
            <test duration="9" locationUrl="java:test://org.mps.deque.DoublyLinkedListDequeTest$LastTest/lastFromAnEmptyDoublyLinkedListDeque" name="from an empty DoublyLinkedListDeque" metainfo="" status="passed"/>
            <test duration="2" locationUrl="java:test://org.mps.deque.DoublyLinkedListDequeTest$LastTest/lastFromANonEmptyDoublyLinkedListDeque" name="from a non-empty DoublyLinkedListDeque" metainfo="" status="passed"/>
        </suite>
        <suite duration="7" locationUrl="java:suite://org.mps.deque.DoublyLinkedListDequeTest$FirstTest" name="when trying to obtain the first element" status="passed">
            <test duration="4" locationUrl="java:test://org.mps.deque.DoublyLinkedListDequeTest$FirstTest/firstFromAnEmptyDoublyLinkedListDeque" name="from an empty DoublyLinkedListDeque" metainfo="" status="passed"/>
            <test duration="3" locationUrl="java:test://org.mps.deque.DoublyLinkedListDequeTest$FirstTest/firstFromANonEmptyDoublyLinkedListDeque" name="from a non-empty DoublyLinkedListDeque" metainfo="" status="passed"/>
        </suite>
        <suite duration="5" locationUrl="java:suite://org.mps.deque.DoublyLinkedListDequeTest$DeleteLastTest" name="when trying to delete last element" status="passed">
            <test duration="3" locationUrl="java:test://org.mps.deque.DoublyLinkedListDequeTest$DeleteLastTest/deleteLastFromAnEmptyDoublyLinkedListDeque" name="from an empty DoublyLinkedListDeque" metainfo="" status="passed"/>
            <test duration="2" locationUrl="java:test://org.mps.deque.DoublyLinkedListDequeTest$DeleteLastTest/deleteLastFromANonEmptyDoublyLinkedListDeque" name="from a non-empty DoublyLinkedListDeque" metainfo="" status="passed"/>
        </suite>
        <suite duration="8" locationUrl="java:suite://org.mps.deque.DoublyLinkedListDequeTest$DeleteFirstTest" name="when trying to delete first element" status="passed">
            <test duration="2" locationUrl="java:test://org.mps.deque.DoublyLinkedListDequeTest$DeleteFirstTest/deleteFirstFromANonEmptyDoublyLinkedListDeque" name="from a non-empty DoublyLinkedListDeque" metainfo="" status="passed"/>
            <test duration="6" locationUrl="java:test://org.mps.deque.DoublyLinkedListDequeTest$DeleteFirstTest/deleteFirstFromAnEmptyDoublyLinkedListDeque" name="from an empty DoublyLinkedListDeque" metainfo="" status="passed"/>
        </suite>
        <suite duration="6" locationUrl="java:suite://org.mps.deque.DoublyLinkedListDequeTest$AppendTest" name="when trying to append" status="passed">
            <test duration="4" locationUrl="java:test://org.mps.deque.DoublyLinkedListDequeTest$AppendTest/appendInAnEmptyDoublyLinkedListDeque" name="in an empty DoublyLinkedListDeque" metainfo="" status="passed"/>
            <test duration="2" locationUrl="java:test://org.mps.deque.DoublyLinkedListDequeTest$AppendTest/appendInANonEmptyDoublyLinkedListDeque" name="in a non-empty DoublyLinkedListDeque" metainfo="" status="passed"/>
        </suite>
        <suite duration="7" locationUrl="java:suite://org.mps.deque.DoublyLinkedListDequeTest$PrependTest" name="when trying to prepend" status="passed">
            <test duration="3" locationUrl="java:test://org.mps.deque.DoublyLinkedListDequeTest$PrependTest/prependInANonEmptyDoublyLinkedListDeque" name="in a non-empty DoublyLinkedListDeque" metainfo="" status="passed"/>
            <test duration="4" locationUrl="java:test://org.mps.deque.DoublyLinkedListDequeTest$PrependTest/prependInAnEmptyDoublyLinkedListDeque" name="in an empty DoublyLinkedListDeque" metainfo="" status="passed"/>
        </suite>
    </suite>
</testrun>
